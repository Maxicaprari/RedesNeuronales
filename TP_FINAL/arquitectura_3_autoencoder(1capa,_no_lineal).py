# -*- coding: utf-8 -*-
"""arquitectura_3_autoencoder(1capa, no lineal).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1okkMsO639q28LIU452RG3wU19hkfAfv0
"""

import torch
import torch.nn as nn

class Autoencoder_Conv(nn.Module):
    def __init__(self,n=28*28, p=0.2):
        super().__init__()
        self.p = p

        # ENCODER: Solo una capa convolucional + MaxPool
        self.encoder = nn.Sequential(
            nn.Conv2d(in_channels=1, out_channels=16, kernel_size=3, padding=1),  # (16, 28, 28)
            nn.ReLU(),
            nn.Dropout(self.p),
            nn.MaxPool2d(kernel_size=2, stride=2)  # (16, 14, 14)
        )

        # DECODER: Solo una capa transpuesta para reconstrucci√≥n
        self.decoder = nn.Sequential(
            nn.ConvTranspose2d(in_channels=16, out_channels=1, kernel_size=3, stride=2, padding=1, output_padding=1),  # (1, 28, 28)
            nn.Sigmoid()
        )

    def forward(self, x):
        x = self.encoder(x)
        x = self.decoder(x)
        return x