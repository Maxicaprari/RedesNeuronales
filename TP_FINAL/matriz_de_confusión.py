# -*- coding: utf-8 -*-
"""Matriz_de_confusión.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14HDa1g3rIJeNVQ9eDuMzhmPsrhp3xfdL
"""

y_pred = []
y_true = []

# Iterar sobre los datos de prueba
size = len(valid_loader.dataset)
for batch, (inputs, labels) in enumerate(valid_loader):
    outputs = model(inputs)  # Feed Network

    outputs = torch.max(torch.exp(outputs), 1)[1].data.cpu().numpy()
    y_pred.extend(outputs)  # Guardar predicciones

    labels = labels.data.cpu().numpy()
    y_true.extend(labels)  # Guardar etiquetas reales

    if batch % 10 == 0:
        current = batch * len(inputs)
        print(f"batch={batch:>5d} muestras-procesadas:{current:>5d}/{size:>5d}")

# Definir las clases
classes = ['T-shirt/top', 'Trouser', 'Pullover', 'Dress', 'Coat',
           'Sandal', 'Shirt', 'Sneaker', 'Bag', 'Ankle Boot']

# Construir la matriz de confusión
cf_matrix = confusion_matrix(y_true, y_pred)
df_cm = pd.DataFrame(cf_matrix / np.sum(cf_matrix, axis=1)[:, None],
                     index=[i for i in classes],
                     columns=[i for i in classes])

plt.figure(figsize=(12, 7))
sn.heatmap(df_cm, annot=True)
# plt.savefig('output.png')